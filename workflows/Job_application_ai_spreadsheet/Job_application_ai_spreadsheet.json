{
  "createdAt": "2025-05-06T07:49:51.422Z",
  "updatedAt": "2025-05-07T11:35:47.000Z",
  "id": "yR51rFyu31Qyhc6Y",
  "name": "Job application ai spreadsheet",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "2b280b52-a0df-4a42-b63a-641fbd5f5579",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "operation": "getAll",
        "returnAll": true,
        "simple": false,
        "filters": {
          "labelIds": [
            "INBOX"
          ],
          "q": "is:unread newer_than:1d"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        220,
        0
      ],
      "id": "b7a15e1a-ad3e-44c8-acb9-9df297c651a3",
      "name": "Gmail",
      "webhookId": "b85c36a9-0bb0-4636-820e-8591ccd2ee86",
      "credentials": {
        "gmailOAuth2": {
          "id": "6xc5s9PzWiNCH9Xs",
          "name": "HR Gmail"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d62c9ef5-fc32-44f1-88c1-c3f36f063059",
              "name": "subject",
              "value": "={{ $json.subject }}",
              "type": "string"
            },
            {
              "id": "92ff2628-b515-4d46-837b-2990835a44c2",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        440,
        0
      ],
      "id": "3255c2e3-f3fd-41c6-8213-3990527e1fab",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Проверьте, является ли это письмо откликом на вакансию. Если да, то строго пишите \"да\". Не нужно писать ничего другого, например, \"спасибо за информацию\" или \"я просмотрел(а) ваше письмо\". Или даже синонимы слова \"да\", например \"конечно\" или \"безусловно\". Ты можешь писать только да,  если ты видишь что письмо является ответом на вакансию. Если письмо не является ответом на вакансию,  то так же строго пишите \"нет. \n\n<email-content>\n{{ $json.text }}\n</email-content>\n</email-topic>\n{{ $json.subject }}\n</email-topic>\n\nОриентируйся на тег email-content для оценки содержания письма на предмет соответствия типу «отклик» на вакансию и email-topic для оценки темы письма  "
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        660,
        0
      ],
      "id": "57968042-021c-43ae-9cf5-120e503f2c99",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": "google/gemma-3-27b-it",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        760,
        220
      ],
      "id": "49c9aad5-8901-46bb-bd22-3993904efeef",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "PrqIbmbNAb3ME4eF",
          "name": "OpenRouter Sales account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "нет",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "80a2efdc-0238-48e9-820c-4d0ba9a807d3"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Нет"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "968f12f4-ce47-489d-877c-6efc8c4db867",
                    "leftValue": "={{ $json.text }} ",
                    "rightValue": "=да",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "да - читать текст"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1020,
        0
      ],
      "id": "ea84500a-1552-4477-bf12-6194600634f6",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields').item.json.text }}\n\n\nНапиши только результат, без блоков кода и твоих комментариев. То есть, не нужно заключать json в блок кода, а также писать те фразы, которые не относятся к json. Также не нужно сокращать json и отходить от той структуры, которая у тебя в инструкциях прописана. Строго соблюдай поля, регистр в полях, язык полей. \nВ поле с описанием пиши только текст сообщения без сервисной информации. То есть, в поле description нужно цитировать ключевую информацию. Причем не надо писать ту информацию, которая есть в остальных полях json. Пиши исключительно те данные, что касаются сообщения человека.\nУбедись, что Description не больше 4 предложений, но при этом содержит все ключевые данные из переписки. Он включает в себя основные моменты, указанные пользователем, перечисленные через запятую. Не нужно додумывать, будь кратким и ясным.\nУбедись, что Follow Up date соответствует формату DD-MM-YYYY, то есть, содержит две цифры для дня, две для месяца и четыре для года, разделённые дефисами. Например, 31-12-2025. Не нужно писать  такие три неправильные варианта дат, как 01-1-2025, 2025-12-31, 31/12/2025.\n\nВот шаблон правильного запроса, который тебе нужно заполнить\n\n{\n  \"Profile\": {\n    \"Name\": \"<Name>\",\n    \"Gender\": \"<Gender>\",\n    \"Country\": \"<Country>\",\n    \"City\": \"<City>\",\n    \"Status\": \"<Status>\",\n    \"Job Posts\": [\n      \"<Job Post 1>\",\n      \"<Job Post 2>\"\n    ],\n    \"Professions\": [\n      \"<Profession 1>\",\n      \"<Profession 2>\"\n    ]\n  },\n  \"Communications\": [\n    {\n      \"Account\": \"<Account>\",\n      \"Communication Type\": \"<Communication Type>\",\n      \"Date\": \"<DD-MM-YYYY>\",\n      \"Note\": \"<Note>\",\n      \"Follow Up Date\": \"<DD-MM-YYYY>\",\n      \"Description\": \"<Description>\"\n    }\n  ],\n  \"Contacts\": [\n    {\n      \"Tool\": \"<Tool>\",\n      \"Value\": \"<Value>\"\n    },\n    {\n      \"Tool\": \"<Tool>\",\n      \"Value\": \"<Value>\"\n    }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1340,
        40
      ],
      "id": "9c57943b-e91c-493e-87ee-f570bdbcd6db",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": "google/gemma-3-27b-it",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1440,
        260
      ],
      "id": "ae2a83f1-2368-48d8-87b0-f48dea2b04ee",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "PrqIbmbNAb3ME4eF",
          "name": "OpenRouter Sales account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<instructions>\nТы - корректор JSON. Твоя задача - исправлять ошибки в джсон, который я тебе даю на вход. В частности, убедись, что дата соответствует формату дд-мм-гггг. То есть, правильно будет написать: \"02-12-2020, а не 2-12-2020 или 02-2-2020. Не исправляй остальной JSON. Оставь его таким же, каким он был до этого. Просто исправь ошибки в дате.Также убедись, что заметка не больше четырех предложений.\nУбери '''json и не заключай результат в блок кода\n</json>\n\n{{ $json.text }}\n\n<result>\nИсправленный json, не заключённый в блок кода без начала '''jsonи без одирарных кавычек в конце. Без использования блоков кода и без форматирования markdown  \n</result>"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1720,
        20
      ],
      "id": "7cf10a10-d2af-4adb-8049-11d9ff6d2b23",
      "name": "Basic LLM Chain2"
    },
    {
      "parameters": {
        "model": "google/gemma-3-27b-it",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1820,
        240
      ],
      "id": "9613bd93-982b-41cb-b6d6-ad62fbf5bc17",
      "name": "OpenRouter Chat Model2",
      "credentials": {
        "openRouterApi": {
          "id": "PrqIbmbNAb3ME4eF",
          "name": "OpenRouter Sales account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "//// Mode: Run Once for All Items\n// Language: JavaScript\n\nconst items = $items('Basic LLM Chain1');\n\nreturn items.map(item => {\n  // получаем ответ от LLM\n  const md = item.json.text || '';\n  // убираем все тройные обратные кавычки и слово “json”\n  const jsonStr = md.replace(/```(?:json)?/gi, '').trim();\n  // парсим чистую JSON-строку\n  return { json: JSON.parse(jsonStr) };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2060,
        40
      ],
      "id": "84b77cf3-2247-425d-b1ca-a62796b78e92",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2280,
        40
      ],
      "id": "c03e1614-673d-404f-b949-e67a0e85349a",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "M7rjHAzLHxn6Kc02",
          "name": "Google Sheets HR"
        }
      }
    }
  ],
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [],
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "500351ab-2836-409c-9ab9-07d0ebd62833",
  "triggerCount": 0,
  "tags": []
}