{
  "createdAt": "2025-05-23T08:21:34.330Z",
  "updatedAt": "2025-05-23T08:24:53.000Z",
  "id": "ycMMon6w2ZInvh57",
  "name": "Browser Automation Backend",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "BrowserUse",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1900,
        140
      ],
      "id": "6afd7b5e-d1bb-433c-a20d-c91c9d3f4c2f",
      "name": "Webhook",
      "webhookId": "89d4ba04-5e2b-4664-b6aa-27b355440a77"
    },
    {
      "parameters": {
        "model": "openai/gpt-4.1",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1700,
        320
      ],
      "id": "79bc7f49-332b-4553-b09d-41fc58f128b4",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "xM1Kdr0j4QvJ4iaw",
          "name": "AdminN8N"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "создать закладку",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "61b24097-c0ca-422a-b39f-579853a30166"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Создать закладку"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1240,
        140
      ],
      "id": "1555028c-43a1-4803-9960-c36e1f93ee4f",
      "name": "Switch"
    },
    {
      "parameters": {
        "model": "openai/gpt-4.1",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -980,
        260
      ],
      "id": "7b085a98-7f21-407d-9bf7-652d053ce52c",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "xM1Kdr0j4QvJ4iaw",
          "name": "AdminN8N"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"action\": \"create_bookmark\",\n  \"params\": {\n    \"title\": \"Название закладки\", \n    \"url\": \"https://example.com\", \n    \"folderName\": \"Моя папка\",\n    \"tags\": [\"важное\", \"работа\"]\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -800,
        220
      ],
      "id": "28b14db7-a9f4-4631-a2cd-d9e92a449ac5",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Напиши действие, к которому относится запрос пользователя\n1. Создать закладку.\n2. Сделать скриншот.\n3. Показать историю.\n\n\n<action>\n{{ $json.body.message }}\n</action> \n\nНапиши конкретное действие, не изменяя его и не заключая в теги, в ловеркейсе",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1660,
        140
      ],
      "id": "99884a3e-57e2-40e0-b22c-71561b7ef29c",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=На основе пользовательского ввода, собери JSON для добавления закладки в Google Chrome. Напиши только результат, используя Google Chrome API и используя всегда по два тега, \n\nУчитывай то, что если данные не предоставляются, то создается закладка текущей страницы: название страницы также должно быть названием текущей страницы. То есть, той вкладки, которая открыта в браузере.\n\nВот образец\nЕсли данных нет, в поле url необходимо указывать плейсхолдер, который предусмотрен в апи Google Chrome. \n\n{\n  \"action\": \"create_bookmark\",\n  \"params\": {\n    \"title\": \"Название закладки\", \n    \"url\": \"https://example.com\", \n    \"folderName\": \"Моя папка\",\n    \"tags\": [\"важное\", \"работа\"]\n  }\n}\n\nА вот пользовательский ввод\n\n\n\n\n{\n  \"action\": \"create_bookmark\",\n  \"params\": {\n    \"title\": \"Название закладки\", \n    \"url\": \"https://example.com\", \n    \"folderName\": \"Моя папка\",\n    \"tags\": [\"важное\", \"работа\"]\n  }\n} \n\n\n{{ $('Webhook').item.json.body.message }}\n\n\nНельзя использовать следующие шаблоны url, используя текущий адрес открытой вкладки в качестве url. Клиент это должен сделать.\n\n<current tab url>\nhttps://example.com\nchrome://newtab/\n\nЗапрещено использовать указанные выше примеры плейсхолдеров URL, только %s\n\nДаже если в запросе пользователя url указан без https://, то нужно всегда делать с. Если пользователь прямо попросил писать без тега, то тогда выполняй это его указание. \n\nЕсли пользователь пишет название сайта словами (Например, гугл, фейсбук, линкедин и так далее), то нужно вставлять URL. ",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -980,
        -20
      ],
      "id": "d17e84e8-22c5-4355-8443-3653a175b58d",
      "name": "AI Agent3"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"action\": \"{{ $json.output.action }}\",\n  \"params\": {\n    \"title\": \"{{ $json.output.params.title }}\", \n    \"url\": \"{{ $json.output.params.url }}\", \n    \"folderName\": \"{{ $json.output.params.folderName }}\",\n    \"tags\": [\"{{ $json.output.params.tags[0] }}\", \"{{ $json.output.params.tags[1] }}\"]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -620,
        -20
      ],
      "id": "2bc871db-df10-4078-8ee9-d7ff73abda1f",
      "name": "Respond to Webhook"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "6c63091b-5a31-4045-a1cf-05134acf7791",
  "triggerCount": 1,
  "tags": []
}