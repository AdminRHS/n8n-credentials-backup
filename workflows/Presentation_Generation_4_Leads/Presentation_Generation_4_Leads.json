{
  "createdAt": "2025-05-13T14:19:59.773Z",
  "updatedAt": "2025-05-15T20:55:05.000Z",
  "id": "H5UwmERdJxwu7W7A",
  "name": "Presentation Generation 4 Leads",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        40,
        0
      ],
      "id": "70e62c0f-9ae5-4119-9038-5ac8af1ac8f7",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openrouter.ai/v1/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openRouterApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"model\": \"gemma-3-27b-it\",\n  \"prompt\": \"{{ $json['prompt'] }}\",\n  \"max_tokens\": 500,\n  \"temperature\": 0.7\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2720,
        300
      ],
      "id": "ac90bca3-041a-48d1-98d0-903b0ae084fb",
      "name": "HTTP Request1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "kE4OK05nMptzbfwn",
          "name": "Token_auth_crm_prospects"
        },
        "openRouterApi": {
          "id": "xM1Kdr0j4QvJ4iaw",
          "name": "AdminN8N"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const openRouterResponse = items[0].json.choices[0].text;\n\nreturn [\n  {\n    json: {\n      presentationContent: openRouterResponse.trim()\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2940,
        300
      ],
      "id": "1155cd3b-8f13-4c42-82a1-0a1ad1de9db9",
      "name": "Code3"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1_Zrz0uHelmf7FsYGJGJddoM11uQMtyr8OfMxuu7UW00/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "OutreachList",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_Zrz0uHelmf7FsYGJGJddoM11uQMtyr8OfMxuu7UW00/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Search URL": "={{ $json['searchUrl'] }}",
            "Name": "={{ $json['leadName'] }}"
          },
          "matchingColumns": [
            "Name"
          ],
          "schema": [
            {
              "id": "Search URL",
              "displayName": "Search URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        660,
        0
      ],
      "id": "5b8e5fed-b6ff-4f66-ae72-86594d1914b7",
      "name": "OutreachList",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Io07x49f6bMyXXQd",
          "name": "Google Sheets account Presentation Gen Leads"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1_Zrz0uHelmf7FsYGJGJddoM11uQMtyr8OfMxuu7UW00/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 1055782168,
          "mode": "list",
          "cachedResultName": "LeadInfo",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_Zrz0uHelmf7FsYGJGJddoM11uQMtyr8OfMxuu7UW00/edit#gid=1055782168"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "profileUrl": "={{ $json[\"profileUrl\"] }}",
            "fullName": "={{ $json[\"fullName\"] }}",
            "headline": "={{ $json[\"headline\"] }}",
            "jobTitle": "={{ $json[\"jobTitle\"] }}",
            "location": "={{ $json[\"location\"] }}",
            "summary": "={{ $json[\"summary\"] }}",
            "imgUrl": "={{ $json[\"imgUrl\"] }}",
            "schoolName": "={{ $json[\"schoolName\"] }}",
            "connectionsCount": "={{ $json[\"connectionsCount\"] }}",
            "connectionDegree": "={{ $json[\"connectionDegree\"] }}",
            "companyName": "={{ $json[\"companyName\"] }}",
            "companyUrl": "={{ $json[\"companyUrl\"] }}",
            "website": "={{ $json[\"website\"] }}",
            "industry": "={{ $json[\"industry\"] }}",
            "companySize": "={{ $json[\"companySize\"] }}",
            "headquarters": "={{ $json[\"headquarters\"] }}",
            "type": "={{ $json[\"type\"] }}",
            "founded": "={{ $json[\"founded\"] }}",
            "specialties": "={{ $json[\"specialties\"] }}",
            "industryCode": "={{ $json[\"industryCode\"] }}",
            "emailAddress": "={{ $json[\"emailAddress\"] }}",
            "emailQualification": "={{ $json[\"emailQualification\"] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "profileUrl",
              "displayName": "profileUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "fullName",
              "displayName": "fullName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headline",
              "displayName": "headline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "jobTitle",
              "displayName": "jobTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "imgUrl",
              "displayName": "imgUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "schoolName",
              "displayName": "schoolName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "connectionsCount",
              "displayName": "connectionsCount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "connectionDegree",
              "displayName": "connectionDegree",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "companyName",
              "displayName": "companyName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "companyUrl",
              "displayName": "companyUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "website",
              "displayName": "website",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "industry",
              "displayName": "industry",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "companySize",
              "displayName": "companySize",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headquarters",
              "displayName": "headquarters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "founded",
              "displayName": "founded",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "specialties",
              "displayName": "specialties",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "industryCode",
              "displayName": "industryCode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "emailAddress",
              "displayName": "emailAddress",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "emailQualification",
              "displayName": "emailQualification",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3420,
        0
      ],
      "id": "03296b39-82d5-4643-921a-63149aafa672",
      "name": "LeadInfo",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Io07x49f6bMyXXQd",
          "name": "Google Sheets account Presentation Gen Leads"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "filters": {
          "q": "=from: \"messaging-digest-noreply@linkedin.com\" subject:\"just messaged you\"",
          "readStatus": "unread"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        240,
        0
      ],
      "id": "975f8d58-666e-4e7b-9f8c-5d15903a65fc",
      "name": "Extract Lead Name",
      "webhookId": "c3c17dc9-e00c-4d66-8e1a-45835d151498",
      "alwaysOutputData": false,
      "credentials": {
        "gmailOAuth2": {
          "id": "fZIkqZJ7zUma0V9g",
          "name": "Gmail account Presentation Gen Lead"
        }
      }
    },
    {
      "parameters": {
        "operation": "markAsRead",
        "messageId": "={{ $json['messageId'] }}"
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        660,
        -180
      ],
      "id": "e1a3d311-a8bd-4510-b177-f9eea9bfb6a7",
      "name": "Mark as Read",
      "webhookId": "4ee0aed0-bc27-4871-8d1c-db24a89b7567",
      "credentials": {
        "gmailOAuth2": {
          "id": "fZIkqZJ7zUma0V9g",
          "name": "Gmail account Presentation Gen Lead"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Access the \"From\" field from the incoming data\nconst fromField = $input.first().json[\"From\"];  // Adjusted to use $input.first().json.From\n\n// Regular expression to extract name before \"via LinkedIn\"\nconst regex = /^(.+?)\\s+via\\s+LinkedIn/;\nconst match = fromField.match(regex);\n\n// Extract the message ID from the incoming data\nconst messageId = $input.first().json.id;  // Accessing the message ID from the incoming JSON\n\n// If a match is found, extract the lead name and generate the LinkedIn search URL\nif (match && match[1]) {\n  const leadName = match[1].trim();\n\n  // Generate the LinkedIn search URL by encoding the leadName\n  const searchUrl = `https://www.linkedin.com/search/results/people/?keywords=${encodeURIComponent(leadName)}`;\n\n  return [{\n    json: {\n      leadName: leadName,    // Store the extracted lead name\n      searchUrl: searchUrl,  // Store the generated LinkedIn search URL\n      messageId: messageId   // Save the Message ID to use later (for marking as read)\n    }\n  }];\n} else {\n  // If no match is found, return an error or empty array\n  return [{\n    json: {\n      error: \"No valid lead name found in 'From' field\",\n      messageId: messageId   // Return the Message ID even if no lead name is found (useful for tracking)\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        440,
        0
      ],
      "id": "ce481bb1-acd5-494f-be5b-5d3fb05a0d43",
      "name": "Return Lead Name, Search URL, Email ID"
    },
    {
      "parameters": {
        "jsCode": "// Access the profile data from the PhantomBuster response\nconst profileData = $json; // Directly use $json to access the data\n\n// Assume messages are available in profileData.messages (adjust if your data structure differs)\nconst messages = profileData.messages || [];\n\n// Create a personalized prompt for the lead with sentiment analysis on messages\nconst prompt = `\nYou will analyze the following messages exchanged with the lead to determine the sentiment and interest level.\n\nMessages:\n${messages.map((m, i) => `${i + 1}. ${m}`).join('\\n')}\n\nFirst, perform sentiment analysis on these messages to decide if the client is interested. Look for positive replies or engagement indicating interest.\n\nIf the client is not interested or replies negatively, respond ONLY with:\n\"Client is not interested.\"\n\nIf the client is interested, proceed to create a personalized presentation based on the lead's profile:\n\n- Name: ${profileData.fullName}\n- Job Title: ${profileData.jobTitle}\n- Company: ${profileData.companyName}\n- Location: ${profileData.location}\n- Education: ${profileData.schoolName}\n- Skills: ${profileData.specialties}\n- Interests/Industry: ${profileData.industry}\n\nThe presentation should focus on:\n1. The lead's role and pain points (e.g., challenges they face in their industry).\n2. How our product/solution can help them based on their job title and industry.\n3. Relevant case studies that match their company size or industry.\n4. A clear call to action.\n`;\n\n// Return the structured prompt\nreturn [\n  {\n    json: {\n      prompt: prompt\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2500,
        300
      ],
      "id": "30737441-3dd0-451c-805b-68fe7d059ca4",
      "name": "Prompt Input"
    },
    {
      "parameters": {
        "agentId": "6762348867715429",
        "additionalFields": {
          "argumentsUi": {
            "argumentValues": [
              {
                "key": "sessionCookie",
                "value": "AQEDATtjDpcC2JVSAAABltMEa0cAAAGW9xDvR04A0l41Rc0v10-EGay3OoiRyzESDjujVZfw5b4mRxujVNDE2WgpNgO2O7Vb9y1suKUTfMA97_9NvJn01Bb3kWgaXLmk2sOdTSG8RG525--Gr1Z0_EBI"
              },
              {
                "key": "=searchUrl",
                "value": "={{ $json['Search URL'] }}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.phantombuster",
      "typeVersion": 1,
      "position": [
        880,
        0
      ],
      "id": "35917fba-d576-481b-81be-598d284d3eb1",
      "name": "Launch Profile Scraping",
      "credentials": {
        "phantombusterApi": {
          "id": "1JiR7YBHNd9EDLBm",
          "name": "Phantombuster account"
        }
      }
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1100,
        0
      ],
      "id": "3ac52d6c-5cba-4e1c-948c-9d0eef21b870",
      "name": "Wait",
      "webhookId": "11402507-8322-48ce-8028-f8969695a33d"
    },
    {
      "parameters": {
        "url": "https://api.phantombuster.com/api/v2/containers/fetch",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "id",
              "value": "={{ $json['id'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1320,
        0
      ],
      "id": "b7a7f667-6d3d-4977-b5b8-6d0bd998d0ba",
      "name": "Get Container",
      "credentials": {
        "httpHeaderAuth": {
          "id": "y9VGZ17pdN9JwrEX",
          "name": "PhantomBuster Header"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "14126d5a-44dc-465d-b9c4-3ea9e1509adf",
              "leftValue": "={{ $json['status'] }}",
              "rightValue": "finished",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1540,
        0
      ],
      "id": "f5553c67-4d24-4c27-8b83-1ffbafe97c52",
      "name": "isFinished"
    },
    {
      "parameters": {
        "agentId": "7686463827442196",
        "additionalFields": {
          "argumentsUi": {
            "argumentValues": [
              {
                "key": "sessionCookie",
                "value": "AQEDATtjDpcC2JVSAAABltMEa0cAAAGW9xDvR04A0l41Rc0v10-EGay3OoiRyzESDjujVZfw5b4mRxujVNDE2WgpNgO2O7Vb9y1suKUTfMA97_9NvJn01Bb3kWgaXLmk2sOdTSG8RG525--Gr1Z0_EBI"
              },
              {
                "key": "inboxFilter",
                "value": "unread"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.phantombuster",
      "typeVersion": 1,
      "position": [
        2260,
        -20
      ],
      "id": "956bd39c-701b-4017-9f66-c10234015f70",
      "name": "Get Messages",
      "credentials": {
        "phantombusterApi": {
          "id": "1JiR7YBHNd9EDLBm",
          "name": "Phantombuster account"
        }
      }
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2480,
        -20
      ],
      "id": "2540c0bf-4eaf-4e5f-9c59-e2a85c0e8bd4",
      "name": "Wait1",
      "webhookId": "484ff652-d1c7-4537-ae53-66eb004a8968"
    },
    {
      "parameters": {
        "url": "https://api.phantombuster.com/api/v2/containers/fetch",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "id",
              "value": "={{ $json['id'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2640,
        -20
      ],
      "id": "86e0bdec-9f47-4ec7-b5d0-4e0037e4f068",
      "name": "Get Container1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "y9VGZ17pdN9JwrEX",
          "name": "PhantomBuster Header"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Access the profile data from the PhantomBuster response\nconst profileData = $json; // Directly use $json to access the data\n\n// Create a new object with only the required fields\nconst result = {\n  profileUrl: profileData.profileUrl,\n  fullName: profileData.fullName,\n  headline: profileData.headline,\n  jobTitle: profileData.jobTitle,\n  location: profileData.location,\n  summary: profileData.summary,\n  imgUrl: profileData.imgUrl,\n  schoolName: profileData.schoolName,\n  connectionsCount: profileData.connectionsCount,\n  connectionDegree: profileData.connectionDegree,\n  companyName: profileData.companyName,\n  companyUrl: profileData.companyUrl,\n  website: profileData.website,\n  industry: profileData.industry,\n  companySize: profileData.companySize,\n  headquarters: profileData.headquarters,\n  type: profileData.type,\n  founded: profileData.founded,\n  specialties: profileData.specialties,\n  industryCode: profileData.industryCode,\n  emailAddress: profileData.emailAddress,\n  emailQualification: profileData.emailQualification,\n  messages: profileData.messages\n};\n\n// Return the structured data as a single object inside an array\nreturn [{\n  json: result\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3260,
        0
      ],
      "id": "66aabcac-2a01-434c-a168-1d467eaf30e9",
      "name": "Return Profile Info"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "df8a2366-a11e-4c25-ac5d-e6ed2d855605",
              "leftValue": "{{ $json['message'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "d6c015ec-84fd-414f-9e8d-af5e0aa1a892",
              "leftValue": "{{ $json['isLastMessageFromMe'] }}",
              "rightValue": "false",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3040,
        20
      ],
      "id": "f22a3d20-4843-46dc-9502-68084696e7c7",
      "name": "isFound"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "14126d5a-44dc-465d-b9c4-3ea9e1509adf",
              "leftValue": "={{ $json['status'] }}",
              "rightValue": "finished",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2800,
        -20
      ],
      "id": "de298df8-0f0b-4a1a-ba25-d28bb94c0259",
      "name": "isFinished1"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2040,
        -20
      ],
      "id": "80491506-e137-4aad-8f65-b630fad8ed80",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "const profiles = $input.all().map(item => item.json).flat();\n\nif (!Array.isArray(profiles)) {\n  throw new Error('Input data is not an array');\n}\n\nreturn profiles.map(profile => ({\n  json: profile\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1860,
        -20
      ],
      "id": "29627980-e73e-4f3d-ab7d-8065824b6c7d",
      "name": "Return Profiles"
    },
    {
      "parameters": {
        "operation": "getOutput",
        "agentId": "6762348867715429",
        "additionalFields": {
          "prevContainerId": "={{ $json['id'] }}",
          "prevStatus": "finished"
        }
      },
      "type": "n8n-nodes-base.phantombuster",
      "typeVersion": 1,
      "position": [
        1720,
        -20
      ],
      "id": "84485560-b9ed-4206-9e14-25a62880e74c",
      "name": "Get Profiles",
      "credentials": {
        "phantombusterApi": {
          "id": "1JiR7YBHNd9EDLBm",
          "name": "Phantombuster account"
        }
      }
    }
  ],
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Extract Lead Name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutreachList": {
      "main": [
        [
          {
            "node": "Launch Profile Scraping",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LeadInfo": {
      "main": [
        []
      ]
    },
    "Extract Lead Name": {
      "main": [
        [
          {
            "node": "Return Lead Name, Search URL, Email ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Lead Name, Search URL, Email ID": {
      "main": [
        [
          {
            "node": "OutreachList",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mark as Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Input": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Launch Profile Scraping": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Get Container",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Container": {
      "main": [
        [
          {
            "node": "isFinished",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isFinished": {
      "main": [
        [
          {
            "node": "Get Profiles",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Messages": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Get Container1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Container1": {
      "main": [
        [
          {
            "node": "isFinished1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Profile Info": {
      "main": [
        [
          {
            "node": "LeadInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isFound": {
      "main": [
        [
          {
            "node": "Return Profile Info",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isFinished1": {
      "main": [
        [
          {
            "node": "isFound",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Get Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Profiles": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Profiles": {
      "main": [
        [
          {
            "node": "Return Profiles",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "abeb9016-7eed-4f67-8594-9c1f49c7d2d0",
  "triggerCount": 0,
  "tags": []
}